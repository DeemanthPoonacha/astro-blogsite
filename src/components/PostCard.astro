---
import { Image } from "astro:assets";
import CategoryList from "./TagList.astro";
import type { PostType } from "../types";
import { getDateString } from "../utils/helpers";
import { RiSparkling2Fill } from "react-icons/ri";

type Props = {
    post: PostType;
};

const { post } = Astro.props;
---

<article
    title={post.title}
    class="relative flex flex-col justify-between overflow-hidden rounded-lg bg-white dark:bg-zinc-900 shadow shadow-cyan-500 hover:shadow-xl hover:shadow-cyan-500 dark:shadow hover:dark:shadow-xl hover:dark:shadow-cyan-500 dark:shadow-cyan-300"
>
    {
        post.featured && (
            <span class="absolute top-4 right-0 rounded-s-lg p-2 z-20 bg-cyan-400 dark:bg-cyan-600 flex gap-1 items-center">
                <RiSparkling2Fill client:load />
                Featured
            </span>
        )
    }
    <a
        href={`/blog/${post.slug}`}
        aria-label={`Read more about ${post.title}`}
        class="overflow-hidden"
    >
        <Image
            loading={"lazy"}
            src={post.image || "/images/logo.png"}
            alt={post.title || "Post image"}
            width={600}
            height={350}
            format="webp"
            class="aspect-[600/350] rounded-t-rounded-lg duration-300 hover:scale-110"
        />
    </a>

    <div class="flex flex-col justify-between p-4 gap-2">
        <div class="">
            <CategoryList
                tags={post.tags.map((tag) => ({ value: tag, label: tag }))}
            />
        </div>

        <a
            href={`/blog/${post.slug}`}
            class="text-4xl prose dark:prose-invert mb-4 font-semibold line-clamp-2"
        >
            {post.title}
        </a>

        <p
            title={post.description}
            class="prose dark:prose-invert text-xl mb-5 line-clamp-2"
        >
            {post.description}
        </p>

        <div
            class="flex justify-between items-center prose text-right dark:prose-invert text-lg"
        >
            <span
                title={`Last updated on ${getDateString(post.updatedAt)} | Published on ${getDateString(post.publishedAt)}`}
            >
                {getDateString(post.publishedAt)}
            </span>
            {
                !!post.author ? (
                    <a
                        title={post.author.name}
                        href={`/authors/${post.author.username}`}
                        class="primaryColor"
                    >
                        {post.author.name}
                    </a>
                ) : null
            }
        </div>
    </div>
</article>
