---
import { marked } from "marked";
import { and, Author, db, desc, eq, Post } from "astro:db";
import { Image } from "astro:assets";

import AuthorData from "../../components/AuthorData.astro";
import H1 from "../../components/H1.astro";
import Layout from "../../layouts/Layout.astro";
import Main from "../../layouts/Main.astro";
import type { AuthorType, CldImageType, PostType } from "../../types";
import { getDateString } from "../../utils/helpers";
import CategoryList from "../../components/TagList.astro";

const { slug } = Astro.params;
if (slug === undefined) return Astro.redirect("/404");

const [post] = await db
    .select({
        id: Post.id,
        title: Post.title,
        slug: Post.slug,
        description: Post.description,
        image: Post.image,
        content: Post.content,
        status: Post.status,
        tags: Post.tags,
        publishedAt: Post.publishedAt,
        createdAt: Post.createdAt,
        updatedAt: Post.updatedAt,
        author: {
            id: Author.id,
            name: Author.name,
            username: Author.username,
            penName: Author.penName,
            title: Author.title,
            image: Author.image,
            socialLinks: Author.socialLinks,
        },
    })
    .from(Post)
    .where(and(eq(Post.slug, slug), eq(Post.status, "published")))
    .orderBy(desc(Post.createdAt))
    .leftJoin(Author, eq(Author.id, Post.authorId));
if (!post) return Astro.redirect("/404");
console.log("ðŸš€ ~ post:", post);

const content = marked.parse(post.content);
const author = post.author;

// const relatedPosts = await getEntries(post.data.relatedPosts);
// console.log("ðŸš€ ~ relatedPosts:", relatedPosts);
---

<Layout title={post.title}>
    <Main>
        <div class="max-w-full prose prose-2xl dark:prose-invert">
            <a href={`/blog`} class="font-bold no-underline">
                &laquo; <span
                    class="prose dark:prose-invert prose-xl underline"
                >
                    All Posts
                </span>
            </a>
            <H1 text={post.title} />
            {
                !!(post.image as CldImageType)?.url && (
                    <Image
                        src={(post.image as CldImageType).url}
                        inferSize
                        alt={"Post image"}
                        format="webp"
                        class="w-full rounded-2xl shadow-xl mb-6 object-top"
                    />
                )
            }
            <p>{post.description}</p>
            <span
                class="flex justify-between max-w-full prose dark:prose-invert"
            >
                <span>
                    Last updated: {getDateString(post.updatedAt)}
                </span>{
                    post.publishedAt && (
                        <span>
                            Published: {getDateString(post.publishedAt)}
                        </span>
                    )
                }
            </span>
            <hr />
            <article set:html={content} />
            <hr />
            <span class="text-4xl flex flex-col gap-4">
                Tags:
                <CategoryList
                    tags={(post.tags as string[]).map((tag) => ({
                        value: tag,
                        label: tag,
                    }))}
                />
            </span>
            {
                !!author && (
                    <div class="mt-24">
                        <span class="text-4xl"> Author: </span>
                        <AuthorData
                            authorData={author as AuthorType}
                            slug={author.username}
                        />
                        {/* <span class="text-4xl">More Posts by Author: </span>
                        <PostList
                            posts={author.posts.filter(
                                (p) => p.slug !== post.slug,
                            )}
                        /> */}
                        <hr />
                    </div>
                )
            }
            <!-- {
                relatedPosts.length > 0 && (
                    <div class="mt-24">
                        <span class="text-4xl"> Related Posts: </span>
                        <PostList posts={relatedPosts} />
                    </div>
                )
            } -->
        </div>
    </Main>
</Layout>
