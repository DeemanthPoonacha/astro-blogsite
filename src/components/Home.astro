---
import PostList from "./PostList.astro";
import TagList from "./TagList.astro";
import H1 from "./H1.astro";
import HomeParallax from "./HomeParallax";
import { Author, db, eq, Post } from "astro:db";
import type { PostType } from "../types";

const allPosts = await db
    .select({
        featured: Post.featured,
        id: Post.id,
        title: Post.title,
        slug: Post.slug,
        description: Post.description,
        image: Post.image,
        status: Post.status,
        tags: Post.tags,
        publishedAt: Post.publishedAt,
        createdAt: Post.createdAt,
        updatedAt: Post.updatedAt,
        author: {
            id: Author.id,
            name: Author.name,
            username: Author.username,
            penName: Author.penName,
        },
    })
    .from(Post)
    .where(eq(Post.status, "published"))
    .leftJoin(Author, eq(Author.id, Post.authorId));

const allTags = [
    ...new Set(
        allPosts
            .flatMap((post) =>
                typeof post.tags === "string"
                    ? JSON.parse(post.tags)
                    : post.tags,
            )
            .filter(Boolean),
    ),
].map((tag) => ({ value: tag, label: tag }));

const featuredposts = allPosts.filter((post) => post.featured);
---

<HomeParallax client:load posts={featuredposts as PostType[]} />

<div
    id="mainTags"
    class="relative md:-mt-[1500px] md:pt-[0px] flex flex-col items-center gap-4 z-30"
>
    <H1
        className="text-center"
        text="Find posts from wide range of categories"
    />
    <TagList tags={[...allTags, ...allTags, ...allTags]} justifyCenter />
</div>
<div class="relative">
    <H1 text="Featured Posts:" />
    <PostList posts={featuredposts as PostType[]} />
</div>
