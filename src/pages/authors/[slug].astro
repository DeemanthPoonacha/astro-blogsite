---
import { marked } from "marked";
import { db, Author, eq, Post } from "astro:db";

import Layout from "../../layouts/Layout.astro";
import PostList from "../../components/PostList.astro";
import Main from "../../layouts/Main.astro";
import AuthorData from "../../components/AuthorData.astro";
import type { AuthorType, PostType } from "../../types";
import { FaPenToSquare } from "react-icons/fa6";

const { slug } = Astro.params;
if (slug === undefined) return Astro.redirect("/404");

const authorsWithPosts = await db
    .select()
    .from(Author)
    .where(eq(Author.username, slug))
    .leftJoin(Post, eq(Author.id, Post.authorId));

if (authorsWithPosts.length === 0) return Astro.redirect("/404");

const user = await Astro.locals.currentUser();

const author = {
    ...authorsWithPosts[0].Author, // Take author details from the first row
    posts: authorsWithPosts
        .map(({ Post }) => {
            return Post?.authorId === user?.id
                ? Post
                : Post?.status === "draft"
                  ? null
                  : Post;
        }) // Extract posts
        .filter(Boolean), // Remove null entries (in case there are no posts)
};

const content = await marked.parse(author.bio);

if (!author) return Astro.redirect("/404");

const isAuthUser = user?.id === author.id;
---

<Layout title={author.penName || author.name}>
    <Main>
        <div class="mb-12 flex justify-between">
            <a href={`/authors`} class="font-bold no-underline">
                &laquo;{" "}
                <span class="prose dark:prose-invert prose-xl underline">
                    All Authors
                </span>
            </a>
            {
                isAuthUser && (
                    <a
                        class="flex gap-1 items-center no-underline bg-primary py-1 px-1.5 rounded-md"
                        href={`/dashboard?editingUser=true`}
                    >
                        <FaPenToSquare client:load size={18} />
                        Edit
                    </a>
                )
            }
        </div>
        <div class="mb-12 max-w-full prose prose-2xl dark:prose-invert">
            <AuthorData authorData={author as AuthorType} />
            <hr />

            <article set:html={content} />
            <hr />
        </div>
        {
            author.posts?.length > 0 && (
                <>
                    <p class="sm:text-6xl text-4xl mb-16 font-bold">
                        {`Posts by ${author.penName || author.name}`}
                    </p>
                    <div class="mb-60">
                        <PostList posts={author.posts as PostType[]} />
                    </div>
                </>
            )
        }
    </Main>
</Layout>
