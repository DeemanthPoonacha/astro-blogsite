---
import H1 from "@/components/H1.astro";
import Layout from "@/layouts/Layout.astro";
import Main from "@/layouts/Main.astro";
import BlogDashboard from "@/components/AuthorDahboard";
import { Author, Post, db, eq } from "astro:db";
import type { AuthorType, AuthorWithPosts } from "@/types";

const user = await Astro.locals.currentUser();
if (!user) return Astro.redirect("/404");

// Prepare the author data
const authorData: AuthorType = {
    id: user.id,
    email: user.emailAddresses[0]?.emailAddress ?? "",
    username: user.username ?? user.firstName ?? "",
    name: [user.firstName, user.lastName].filter(Boolean).join(" "),
    title: "Bloggy Author",
    image: user.imageUrl,
    bio: "I'm a new author on Bloggy, looking to share my thoughts and experiences with the world.",
    socialLinks: [
        {
            platform: "mail",
            link: `mailto:${user.emailAddresses[0]?.emailAddress}`,
        },
    ],
    createdAt: new Date(),
};

// Upsert author and get posts in minimal queries
const [author] = await db
    .insert(Author)
    .values(authorData)
    .onConflictDoUpdate({
        target: Author.id,
        set: {
            email: authorData.email,
            username: authorData.username,
            name: authorData.name,
            image: authorData.image,
        },
    })
    .returning();
if (!author) return Astro.redirect("/404");

// Fetch posts in parallel with the upsert
const posts = await db.select().from(Post).where(eq(Post.authorId, author.id));

// Combine user data with author and posts
const authorWithPosts = {
    ...author,
    posts: posts ?? [],
};
console.log("ðŸš€ ~ enrichedUser:", authorWithPosts);

const previewId = Astro.url.searchParams.get("previewId");
const editingId = Astro.url.searchParams.get("editingId");
console.log("ðŸš€ ~ previewId:", previewId);
---

<Layout title="Dashboard | Bloggy">
    <Main className="w-full">
        <H1 text="Dashboard" />
        {
            !previewId ? (
                <BlogDashboard
                    client:load
                    author={authorWithPosts as AuthorWithPosts}
                    defaultEditingId={editingId}
                />
            ) : (
                <a href={`?editingId=${previewId}`}>{previewId}</a>
            )
        }
    </Main>
</Layout>
